{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww15520\viewh11200\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \ul \ulc0 Why is the second line working and not throwing an error?\ulnone \
	- It is JSX (Javascript extension). It will not be executed by the browser, but will be executed by the JSX extension and compiled by something else so the browser can understand\
	- Being compiled by Babel\
	- Browser is actually responding to\'85\
		return React.createElement(\'91div\'92, null, \'91Hello React!\'92)\
	- First argument is the element to be created, second argument is any attributes the div element has, third argument is the child of the div element\
\
\

\f1\b\fs32 jsdrops.com/rgs1.1
\f0\b0\fs24 \
\
	- ALWAYS CAPITALIZE FIRST LETTER. REACT WILL THINK YOU ARE RENDERING AN HTML ELEMENT IF YOU DON\'92T\
	- Without JSX, it would be a lot harder to code and maintain\'85\
	- Look at rgs1.1 section for more notes and examples\
\

\f1\b\fs32 jsdrops.com/rgs1.2\

\f0\b0\fs24 useState(initialStateValue):\
	a) state object (getter)\
	b) updater function (setter)\
returns an array with exactly two elements\
\
const [counter, setCounter] = useState()\
	- destructuring feature to capture two variables in one line\
\

\f1\b\fs32 jsdrops.com/rgs1.4\

\f0\b0\fs24 ReactDOM.render(\
	
\f1\b DOES NOT WORK. Each one of these elements get translated into a function call.\

\f0\b0 	<Button /><Display />,\
	document.getElementById(\'91mountNode)\
)\
\
A few things you can do\'85\
	\ul ARRAY (good solution ONLY when all the elements you\'92re rendering are coming from the same component in a dynamic way)\
\ulnone 		[<Button />, <Display />]\
\
	\ul DIV\ulnone \
		<div>\
			<Button />\
			<Display />\
		</div>\
	
\f1\b If you don\'92t want a DOM Parent to be introduced, use <React.Fragment> instead of <div>\
	Actually, you can just use an empty tag <> which will be interpreted as <React.Fragment>
\f0\b0 \
\

\f1\b\fs32 jsdrops.com/rgs1.7\

\f0\b0\fs24 React only updates anything that has been changed.\
If we try to text something in the HTML, we will not be able to.\
	Throwing away the whole DOM node on every tick and regenerating it.\
\
However, React will be able to let you update the text.\
	Changing only the timestamp text\'85 Not the whole DOM node!\
\

\f1\b\fs32 jsdrops.com/rgs2.1\

\f0\b0\fs24 Each react component must have a render() function.\
\
\
\
\
\
\
\
\
}